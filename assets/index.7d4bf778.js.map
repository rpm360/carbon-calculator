{"version":3,"mappings":"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","names":["p","relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","scriptRel","seen","base","__vitePreload","baseModule","deps","dep","isCss","cssSelector","res","rej","CarbonDataContext","createContext","activities","addActivities","removeActivity","userData","setUserData","totalEmissions","clearData","STORAGE_KEYS","ACTIVITIES","USER_DATA","TOTAL_EMISSIONS","loadFromStorage","key","defaultValue","storedValue","localStorage","getItem","JSON","parse","error","saveToStorage","value","setItem","stringify","CarbonDataProvider","children","setActivities","useState","setTotalEmissions","calculateEmissions","factors","driving","ai_usage","commute","phone","electricity","food","reduce","total","activity","type","updateTotalEmissions","useEffect","newActivities","updatedActivities","id","filter","setUserDataHandler","data","removeItem","_jsx","Provider","useCarbonData","useContext","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","fallback","className","_jsxs","_a","toString","onClick","setState","window","location","href","LoadingSpinner","message","WelcomePage","lazy","AuthPage","ReportPage","App","Router","Suspense","Switch","Route","exact","path","component","ReactDOM","StrictMode","document","getElementById"],"sources":["../../vite/modulepreload-polyfill","../../vite/preload-helper","../../src/context/CarbonDataContext.tsx","../../src/components/ErrorBoundary.tsx","../../src/components/LoadingSpinner.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const scriptRel = 'modulepreload';const seen = {};const base = '/carbon-calculator/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\n// Define types for our activities\nexport type ActivityType = 'driving' | 'ai_usage' | 'commute' | 'phone' | 'electricity' | 'food';\n\nexport interface CarbonActivity {\n  id: string;\n  type: ActivityType;\n  value: number;\n  unit: string;\n  timestamp: Date;\n}\n\nexport interface User {\n  email: string;\n  city: string;\n  country?: string;\n}\n\n// Define the shape of our context\ninterface CarbonDataContextType {\n  activities: CarbonActivity[];\n  addActivities: (newActivities: CarbonActivity[]) => void;\n  removeActivity: (id: string) => void;\n  userData: User | null;\n  setUserData: (data: User) => void;\n  totalEmissions: number;\n  clearData: () => void;\n}\n\n// Create the context with default values\nconst CarbonDataContext = createContext<CarbonDataContextType>({\n  activities: [],\n  addActivities: () => {},\n  removeActivity: () => {},\n  userData: null,\n  setUserData: () => {},\n  totalEmissions: 0,\n  clearData: () => {}\n});\n\n// Storage keys\nconst STORAGE_KEYS = {\n  ACTIVITIES: 'carbon_calculator_activities',\n  USER_DATA: 'carbon_calculator_user_data',\n  TOTAL_EMISSIONS: 'carbon_calculator_total_emissions'\n};\n\n// Load data from localStorage\nconst loadFromStorage = <T,>(key: string, defaultValue: T): T => {\n  try {\n    const storedValue = localStorage.getItem(key);\n    return storedValue ? JSON.parse(storedValue) : defaultValue;\n  } catch (error) {\n    console.error(`Error loading data from localStorage (${key}):`, error);\n    return defaultValue;\n  }\n};\n\n// Save data to localStorage\nconst saveToStorage = <T,>(key: string, value: T): void => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    console.error(`Error saving data to localStorage (${key}):`, error);\n  }\n};\n\n// Create a provider component\nexport const CarbonDataProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  // Initialize state with data from localStorage\n  const [activities, setActivities] = useState<CarbonActivity[]>(() => \n    loadFromStorage(STORAGE_KEYS.ACTIVITIES, [])\n  );\n  \n  const [userData, setUserData] = useState<User | null>(() => \n    loadFromStorage(STORAGE_KEYS.USER_DATA, null)\n  );\n  \n  const [totalEmissions, setTotalEmissions] = useState<number>(() => \n    loadFromStorage(STORAGE_KEYS.TOTAL_EMISSIONS, 0)\n  );\n\n  // Calculate carbon emissions based on activity type and value\n  const calculateEmissions = (activities: CarbonActivity[]): number => {\n    const factors: Record<ActivityType, number> = {\n      driving: 0.2, // kg CO2e per km\n      ai_usage: 0.1, // kg CO2e per hour\n      commute: 0.15, // kg CO2e per km\n      phone: 0.05, // kg CO2e per hour\n      electricity: 0.5, // kg CO2e per kWh\n      food: 2.5 // kg CO2e per kg of meat\n    };\n\n    return activities.reduce((total, activity) => {\n      return total + (activity.value * factors[activity.type as ActivityType]);\n    }, 0);\n  };\n\n  // Update total emissions when activities change\n  const updateTotalEmissions = (activities: CarbonActivity[]) => {\n    const total = calculateEmissions(activities);\n    setTotalEmissions(total);\n    saveToStorage(STORAGE_KEYS.TOTAL_EMISSIONS, total);\n  };\n  \n  // Save activities to localStorage whenever they change\n  useEffect(() => {\n    saveToStorage(STORAGE_KEYS.ACTIVITIES, activities);\n    updateTotalEmissions(activities);\n  }, [activities]);\n  \n  // Save userData to localStorage whenever it changes\n  useEffect(() => {\n    if (userData) {\n      saveToStorage(STORAGE_KEYS.USER_DATA, userData);\n    }\n  }, [userData]);\n\n  // Add new activities\n  const addActivities = (newActivities: CarbonActivity[]) => {\n    const updatedActivities = [...activities, ...newActivities];\n    setActivities(updatedActivities);\n  };\n\n  // Remove an activity\n  const removeActivity = (id: string) => {\n    const updatedActivities = activities.filter(activity => activity.id !== id);\n    setActivities(updatedActivities);\n  };\n\n  // Update user data\n  const setUserDataHandler = (data: User) => {\n    setUserData(data);\n  };\n\n  // Clear all data\n  const clearData = () => {\n    setActivities([]);\n    setUserData(null);\n    setTotalEmissions(0);\n    \n    // Clear data from localStorage\n    localStorage.removeItem(STORAGE_KEYS.ACTIVITIES);\n    localStorage.removeItem(STORAGE_KEYS.USER_DATA);\n    localStorage.removeItem(STORAGE_KEYS.TOTAL_EMISSIONS);\n  };\n\n  return (\n    <CarbonDataContext.Provider value={{\n      activities,\n      addActivities,\n      removeActivity,\n      userData,\n      setUserData: setUserDataHandler,\n      totalEmissions,\n      clearData\n    }}>\n      {children}\n    </CarbonDataContext.Provider>\n  );\n};\n\n// Custom hook to use the carbon data context\nexport const useCarbonData = () => useContext(CarbonDataContext);\n","import { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // You can log the error to an error reporting service\n    console.error('Error caught by ErrorBoundary:', error, errorInfo);\n  }\n\n  render(): ReactNode {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n      \n      return (\n        <div className=\"error-boundary\">\n          <h2>Something went wrong.</h2>\n          <details>\n            <summary>Error Details</summary>\n            <p>{this.state.error?.toString()}</p>\n          </details>\n          <button\n            onClick={() => {\n              this.setState({ hasError: false, error: null });\n              window.location.href = '/';\n            }}\n          >\n            Go to Home Page\n          </button>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { FC } from 'react';\nimport '../styles/LoadingSpinner.css';\n\ninterface LoadingSpinnerProps {\n  message?: string;\n}\n\nconst LoadingSpinner: FC<LoadingSpinnerProps> = ({ message = 'Loading...' }) => {\n  return (\n    <div className=\"loading-container\">\n      <div className=\"spinner\"></div>\n      <p className=\"loading-message\">{message}</p>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","// React is used implicitly by JSX\nimport { lazy, Suspense } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { CarbonDataProvider } from './context/CarbonDataContext'\nimport ErrorBoundary from './components/ErrorBoundary'\nimport LoadingSpinner from './components/LoadingSpinner'\nimport './App.css'\nimport './styles/ErrorBoundary.css'\n\n// Lazy load page components for better performance\nconst WelcomePage = lazy(() => import('./pages/WelcomePage'))\nconst AuthPage = lazy(() => import('./pages/AuthPage'))\nconst ReportPage = lazy(() => import('./pages/ReportPage'))\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <CarbonDataProvider>\n        <Router>\n          <div className=\"app-container\">\n            <Suspense fallback={<LoadingSpinner message=\"Loading Carbon Calculator...\" />}>\n              <Switch>\n                <Route exact path=\"/\" component={WelcomePage} />\n                <Route path=\"/auth\" component={AuthPage} />\n                <Route path=\"/report\" component={ReportPage} />\n              </Switch>\n            </Suspense>\n          </div>\n        </Router>\n      </CarbonDataProvider>\n    </ErrorBoundary>\n  )\n}\n\nexport default App\n","import { StrictMode } from 'react'\nimport * as ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"file":"assets/index.7d4bf778.js"}